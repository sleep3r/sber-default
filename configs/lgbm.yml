exp_name: "baseline"
work_dir: "/Users/alexander/Desktop/HSE/ML/Sber_hack/runs"
seed: 45657

dataset:
  train_path: "https://raw.githubusercontent.com/BKHV/risk_models/master/data/PD-data-train.csv"
  test_path: "https://raw.githubusercontent.com/BKHV/risk_models/master/data/PD-data-test.csv"

  target_name: "default_12m"


features:
  generation: # don't forget to add generated columns to preprocessing
    has_na: null # adds has_na column if true
    duplicates: group # adds duplicates_group if group
    mark_fin: ar_revenue # adds has_fin by no nan rows of column specified
    mark_nofin: null # adds no_fin by nan rows of column specified

  selection:
    selected: [ 'ul_capital_sum', 'ul_founders_cnt', 'ogrn_age', 'ab_other_current_assets',
                'ab_cash_and_securities', 'ab_own_capital',
                'adr_actual_age', 'r_25_a', 'ab_inventory', 'r_1_a',
                'ab_other_borrowings', 'r_2_a', 'ar_profit_before_tax', 'ar_balance_of_rvns_and_expns', 'r_26_a' ]

preprocessing:
  replace_inf: null
  process_na: null # drop to drop or group to keep only na or null to do nothing
  select_rows: has_fin # selects only rows if selected col is specified

  cat_features: [ ]
  cont_features: [ ]
  skewed_features: [ ]
  other_features: [ 'ul_capital_sum', 'ul_founders_cnt', 'ogrn_age', 'ab_other_current_assets',
                    'ab_cash_and_securities', 'ab_own_capital',
                    'adr_actual_age', 'r_25_a', 'ab_inventory', 'r_1_a',
                    'ab_other_borrowings', 'r_2_a', 'ar_profit_before_tax', 'ar_balance_of_rvns_and_expns', 'r_26_a',
                    'duplicates_group', "has_fin"]
  drop_features: [ "record_id", ]

  scaler:
    type: "sklearn.preprocessing.RobustScaler"
    params: { }
  imputer:
    type: "sklearn.impute.SimpleImputer"
    params:
      strategy: "median"
  encoder:
    type: "sklearn.preprocessing.OneHotEncoder"
    params:
      handle_unknown: 'ignore'
  normalizer:
    type: "sklearn.preprocessing.QuantileTransformer"
    params:
      n_quantiles: 100
      output_distribution: "normal"

model:
  type: lightgbm.LGBMClassifier
  eval_set_param: "eval_set"
  params:
    boosting_type: gbdt
    objective: binary
    metric: binary
    num_leaves: 32
    max_depth: 6
    learning_rate: 0.05
    colsample_bytree: 0.8
    subsample: 0.8
    subsample_freq: 1
    n_jobs: 6
    n_estimators: 2000
    min_child_samples: 100
  fit_params:
    early_stopping_rounds: 100
    verbose: false

validation:
  cutoff: 0.06
  test_size: 0.2

  cv_params:
    verbose: true
    fold_seed: 1
    num_train_seeds: 3
    n_folds: 5
    out_metric:
      type: sklearn.metrics.roc_auc_score
    k_fold_fn:
      type: sklearn.model_selection.GroupKFold # sklearn.model_selection.GroupKFold if preprocessing.duplicates == group
    groups_col: duplicates_group # duplicates_group if preprocessing.duplicates == group

