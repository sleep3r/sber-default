exp_name: ""
work_dir: ""
seed: 45657

dataset:
  train_path: ""
  test_path: ""

  target_name: ""

#  [ 'ar_revenue', 'ar_total_expenses', 'ar_sale_cost', 'ar_selling_expenses',
#    'ar_management_expenses', 'ar_sale_profit', 'ar_balance_of_rvns_and_expns',
#    'ar_profit_before_tax', 'ar_taxes', 'ar_other_profit_and_losses', 'ar_net_profit',
#    'ab_immobilized_assets', 'ab_mobile_current_assets', 'ab_inventory', 'ab_accounts_receivable',
#    'ab_other_current_assets', 'ab_cash_and_securities', 'ab_losses', 'ab_own_capital',
#    'ab_borrowed_capital', 'ab_long_term_liabilities', 'ab_short_term_borrowing', 'ab_accounts_payable',
#    'ab_other_borrowings', 'bus_age', 'ogrn_age', 'adr_actual_age', 'head_actual_age', 'cap_actual_age',
#    'ul_staff_range', 'ul_capital_sum', 'ul_founders_cnt', 'ul_branch_cnt', 'ul_strategic_flg',
#    'ul_systematizing_flg', 'r_1_a', 'r_2_a', 'r_3_a', 'r_4_a', 'r_5_a', 'r_6_a', 'r_7_a', 'r_8_a', 'r_9_a',
#    'r_10_a', 'r_11_a', 'r_12_a', 'r_13_a', 'r_15_a', 'r_16_a', 'r_17_a', 'r_18_a', 'r_19_a', 'r_20_a',
#    'r_21_a', 'r_22_a', 'r_23_a', 'r_24_a', 'r_25_a', 'r_26_a', 'r_27_a' ]


features_generation: # (!!!) don't forget to add generated columns to preprocessing
  has_na: null # adds 'has_na' column if true
  duplicates: null # adds 'duplicates_group' column if group
  mark_fin: null # adds 'has_fin' by no nan rows of column specified
  mark_nofin: null # adds 'no_fin' by nan rows of column specified


preprocessing:
  replace_inf: null
  process_na: null # drop to drop or group to keep only na or null to do nothing
  select_rows: null # selects only rows if selected col is true

  cat_features: [ ]
  cont_features: [ ]
  skewed_features: [ ]
  other_features: [ ]
  drop_features: [ ]

  scaler:
    type: "sklearn.preprocessing.RobustScaler"
    params: { }
  imputer:
    type: "sklearn.impute.SimpleImputer"
    params:
      strategy: "median"
  encoder:
    type: "sklearn.preprocessing.OneHotEncoder"
    params:
      handle_unknown: 'ignore'
  normalizer:
    type: "sklearn.preprocessing.QuantileTransformer"
    params:
      n_quantiles: 100
      output_distribution: "normal"


features_selection:
  selected: [ ]


model:
  type: sklearn.ensemble.RandomForestClassifier
  params:
    n_estimators: 120
    class_weight: null
    n_jobs: 4
    max_depth: 15
    criterion: gini


validation:
  cutoff: 0.06
  test_size: 0.2

  cv_params:
    verbose: true
    fold_seed: 1
    num_train_seeds: 3
    n_folds: 5
    out_metric:
      type: sklearn.metrics.roc_auc_score
    k_fold_fn:
      type: sklearn.model_selection.GroupKFold # sklearn.model_selection.GroupKFold if preprocessing.duplicates == group
    groups_col: duplicates_group # duplicates_group if preprocessing.duplicates == group